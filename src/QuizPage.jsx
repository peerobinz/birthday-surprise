import { useParams, useNavigate } from "react-router-dom";
import { useState, useContext, useEffect } from "react";
import { QuizContext } from "./QuizContext";
import Confetti from "react-confetti";
import "./QuizPage.css";

const questions = [
{
    question: "1. ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡πÅ‡∏ü‡∏ô",
    choices: ["18/04/2001", "17/04/2000", "19/04/2002"],
    correct: "18/04/2001",
  },
  {
    question: "2. ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ Fast Food ‡∏ó‡∏µ‡πà‡πÅ‡∏ü‡∏ô‡∏ä‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
    choices: ["KFC", "McDonald's", "Burger King"],
    correct: "KFC",
  },
  {
    question: "3. ‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å",
    choices: ["‡πÄ‡∏Å‡∏≤‡∏∞‡∏•‡πâ‡∏≤‡∏ô", "‡πÄ‡∏Å‡∏≤‡∏∞‡∏™‡∏µ‡∏ä‡∏±‡∏á", "‡∏û‡∏±‡∏ó‡∏¢‡∏≤"],
    correct: "‡πÄ‡∏Å‡∏≤‡∏∞‡∏™‡∏µ‡∏ä‡∏±‡∏á",
  },
  {
    question: "4. ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏£‡∏≠‡∏ö",
    choices: ["03/09/2023", "03/08/2020", "03/09/2022"],
    correct: "03/09/2023",
  },
  {
    question: "5. ‡∏Ñ‡∏∏‡∏ì‡∏£‡∏±‡∏Å‡πÅ‡∏ü‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏°‡∏±‡πâ‡∏¢",
    choices: ["‡∏£‡∏±‡∏Å‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î", "‡∏£‡∏±‡∏Å‡∏ö‡πâ‡∏≤‡∏á‡∏ö‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤", "‡∏£‡∏±‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏°‡∏≤‡∏Å"],
    correct: "‡∏£‡∏±‡∏Å‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
  },
];

export default function QuizPage() {
  const { number } = useParams();
  const qNum = parseInt(number);
  const navigate = useNavigate();
  const { answers, setAnswers } = useContext(QuizContext);
  const [answer, setAnswer] = useState(answers[qNum - 1] || "");
  const [isWrong, setIsWrong] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);
  const [showConfetti, setShowConfetti] = useState(false);

  // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö confetti
  const [windowSize, setWindowSize] = useState({
    width: window.innerWidth,
    height: window.innerHeight,
  });

  useEffect(() => {
    function handleResize() {
      setWindowSize({ width: window.innerWidth, height: window.innerHeight });
    }
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();

    if (answer !== questions[qNum - 1].correct) {
      setIsWrong(true);
      setTimeout(() => setIsWrong(false), 500);
      return;
    }

    setIsCorrect(true);
    setShowConfetti(true);

    const updated = [...answers];
    updated[qNum - 1] = answer;
    setAnswers(updated);

    setTimeout(() => {
      setIsCorrect(false);
      setShowConfetti(false);
      if (qNum < questions.length) {
        navigate(`/quiz/${qNum + 1}`);
      } else {
        navigate("/gift");
      }
    }, 5000); // 2 ‡∏ß‡∏¥ ‡πÉ‡∏´‡πâ confetti ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏ó‡∏µ‡πà
  };

  return (
    <>
      {showConfetti && (
        <Confetti width={windowSize.width} height={windowSize.height} />
      )}

      <div
        className={`quiz-container ${isWrong ? "shake" : ""} ${
          isCorrect ? "correct" : ""
        }`}
      >
        <h2 className="quiz-question">{questions[qNum - 1].question}</h2>

        {isWrong && (
          <div className="error-message">‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö! ‚ùå</div>
        )}

        <form onSubmit={handleSubmit}>
          {questions[qNum - 1].choices.map((choice, index) => (
            <label key={index} className="quiz-choice">
              <input
                type="radio"
                name="answer"
                value={choice}
                checked={answer === choice}
                onChange={() => setAnswer(choice)}
                required
              />
              {choice}
            </label>
          ))}
          <br />
          <button className="quiz-button" type="submit">
            {qNum === questions.length ? "‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç üéÅ" : "‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚û°Ô∏è"}
          </button>
        </form>
      </div>
    </>
  );
}
